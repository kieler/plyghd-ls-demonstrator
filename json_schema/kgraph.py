# generated by datamodel-codegen:
#   filename:  KGraphSchema.json
#   timestamp: 2024-10-02T12:52:52+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel


class KGraphData(BaseModel):
    properties: Optional[Dict[str, Any]] = None


class KPlacementData(BaseModel):
    # __root__: Any
    pass


class KGraphElement(BaseModel):
    data: Optional[List[KGraphData]] = None
    properties: Optional[Dict[str, Any]] = None
    parent: Optional[KGraphElement] = None
    type: Optional[str] = None


class KLabeledGraphElement(KGraphElement):
    labels: Optional[List[str]] = None


class KLabel(KGraphElement):
    text: Optional[str] = None
    type: Optional[str] = 'label'


class KEdge(KGraphElement):
    sourceId: Optional[str] = None
    targetId: Optional[str] = None
    type: Optional[str] = 'edge'


class KPort(KLabeledGraphElement):
    edges: Optional[List[KEdge]] = None
    type: Optional[str] = 'port'


class KRendering(KGraphData):
    parent: Optional[KRendering] = None
    placementData: Optional[KPlacementData] = None
    styles: Optional[List] = None
    actions: Optional[List] = None
    type: Optional[str] = 'KRenderingImpl'


class KContainerRendering(KRendering):
    children: Optional[List[KRendering]] = None
    childPlacement: Optional[Any] = None
    type: Optional[str] = 'KContainerRenderingImpl'


class KRectangle(KContainerRendering):
    type: Optional[str] = 'KRectangleImpl'


class KRoundedRectangle(KRectangle):
    cornerWidth: Optional[float] = None
    cornerHeight: Optional[float] = None


class KPolyline(KContainerRendering):
    pass


class KPolygon(KPolyline):
    pass


class KSpline(KPolyline):
    pass


class KImage(KContainerRendering):
    bundleName: Optional[str] = None
    imagePath: Optional[str] = None


class KEllipse(KContainerRendering):
    pass


class KArc(KContainerRendering):
    startAngle: Optional[float] = None
    arcAngle: Optional[float] = None


class KText(KContainerRendering):
    text: Optional[str] = None
    clip: Optional[bool] = None


class KNode(KLabeledGraphElement):
    children: Optional[List[KNode]] = None
    outgoing_edges: Optional[List[KEdge]] = None
    incoming_edges: Optional[List[KEdge]] = None
    ports: Optional[List[KPort]] = None
    type: Optional[str] = 'node'


KGraphElement.update_forward_refs()
KRendering.update_forward_refs()
KNode.update_forward_refs()
